{
    "collab_server" : "",
    "contents" : "### Final project Spring 2017\n### Jacy Hyde\n\n\n### This project will use classified landuse raster data and a\n### polygon shapefile to create an output dataframe with by-pixel\n### information about the location, year of deforestation, and \n### distance from the transmission line\n\ninstall.packages(\"raster\")\ninstall.packages(\"rgdal\")\ninstall.packages(\"sp\")\ninstall.packages(\"rgeos\")\n\nlibrary(raster)\nlibrary(rgdal)\nlibrary(sp)\nlibrary(rgeos)\n\n# Import transmission line using readOGR from rgdal\n#args: dsn= directory location, layer=layer name w/o extension\nts_line <- readOGR(dsn = \".\", layer= \"NE_tsline_WGS84\")\nts_line <- readOGR(dsn = \".\", layer= \"NE_line1\")\n\n# Look at the file\nclass(ts_line)\n### [1] \"SpatialLinesDataFrame\"\n### attr(,\"package\")\n### [1] \"sp\"\n\nextent(ts_line)\n# class       : Extent \n# xmin        : -52.51523 \n# xmax        : -51.07509 \n# ymin        : -0.8724459 \n# ymax        : 0.8546136 \n\nsummary(ts_line)\n# Object of class SpatialLinesDataFrame\n\ncrs(ts_line)\n# CRS arguments:\n#  +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 \n\nplot(ts_line, col = \"red\", main = \"Transmission Lines\")\n\n\n#reproject to UTM zone 23S in order to create buffer, the initial CRS had no reference unites\npline <- spTransform(ts_line, CRS(\"+init=epsg:29183\")) \ncrs(pline)\n\n\n#create buffer\nbuffWidth <- 30000 #30m buffer\nlineBuff <- gBuffer(pline, width = 30000, byid= FALSE)\n\n# must reproject buffer back to original projection so it can be used to clip the raster\nlineBuff <- spTransform(lineBuff, \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\" )\ncrs(lineBuff)\n#CRS arguments:\n#+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 \n\n#check\nplot(lineBuff)\nextent(lineBuff)\n\n\n#import raster\nHansen2 <- raster(\"./NE_HanAm.tif\")\n\n#view raster structure\nHansen2\n# class       : RasterLayer \n# dimensions  : 61088, 40000, 2443520000  (nrow, ncol, ncell)\n# resolution  : 0.00025, 0.00025  (x, y)\n# extent      : -60, -50, -10, 5.272  (xmin, xmax, ymin, ymax)\n# coord. ref. : +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 \n# data source : /Users/JacyHyde/Desktop/GIS_Project_new/NE_HanAm.tif \n# names       : NE_HanAm \n# values      : 0, 14  (min, max)\n\nhead(Hansen2)\nplot(Hansen2)\nmaxValue(Hansen2)\n#[1] 14\nncell(Hansen2)\n#[1] 2443520000\ncrs(Hansen2)\n# CRS arguments:\n#   +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 \n\n\n#clip raster using the buffer\nextent(Hansen2)\nHansen_clip <- crop(Hansen2, extent(lineBuff), snap= \"out\")\n\nbuf_raster <-rasterize(lineBuff, Hansen_clip)\n# Transfers values associated with the buffer into raster cells.\n# args are the input file and the name of the output file\n\nHansen_buff <- mask(x=Hansen_clip, mask=buf_raster)\nwriteRaster(Hansen_buff, \"hansen_buffer\", \"GTiff\")\n\n#Create a new Raster object that has the same values as x, except for the cells that are NA \n# in a 'mask'. These cells become NA. The mask can be\n# either another Raster* object of the same extent and resolution, or a Spatial object. \n# args= x = the raster object\n# mask= the other raster object\n\nplot(Hansen_buff)\n\n#to plot the buffer over the Raster\nplot(Hansen_clip)\nlines(lineBuff)\n\n#To find the distance of the center of each pixel to the transmission line\n#convert raster to points\nHansen_points <-  as(Hansen_clip,\"SpatialPoints\")\ncrs(Hansen_points)\n\n#need to reproject again to give them units for the distance function\nHansen_points <- spTransform(Hansen_points, CRS(\"+init=epsg:29183\"))\n#use pline- already transformed to UTM\ncrs(pline)\n\ndist <-  gDistance(Hansen_points, pline, byid=FALSE)\n\ndim(dist)\n#[1]       34 10576571\n#there are 34 possible lines and 10576771 pixels??? - found distance to each line\n\n#find the minimum distance between the a pixel and the nearest line\ndmin <- apply(dist, 2, min)\n#returns an array of values by applying the designated function to a matrix\n\nHansen[] <- dmin\n\n# Determine which year each pixel is deforested\n                     \n\n\nr <- raster(xmin===)\nr <- setValues(r, 0) #sert 0 values\n\nr <- mask(r, ts_lines)\n\nrD <- distance(r)\n\n#extract values at points\n#cbind ID from points to matrix of distancec values\n\n#how to calculates distance on large raster R stackoverflow\n# # Add data, and write to shapefile\n\n# writeOGR( pc100km, \"pc100km\", \"pc100km\", driver=\"ESRI Shapefile\" ) \n\n",
    "created" : 1490368855773.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4188702799",
    "id" : "1B98FB2D",
    "lastKnownWriteTime" : 1491245954,
    "last_content_update" : 1491245954947,
    "path" : "C:/Users/jacyh/Desktop/GIS_Project_new/GIS_Project_new/Hyde_finalproject.R",
    "project_path" : "Hyde_finalproject.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}